package resource_types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// GetResourceTypesHandlerFunc turns a function with the right signature into a get resource types handler
type GetResourceTypesHandlerFunc func() middleware.Responder

// Handle executing the request and returning a response
func (fn GetResourceTypesHandlerFunc) Handle() middleware.Responder {
	return fn()
}

// GetResourceTypesHandler interface for that can handle valid get resource types params
type GetResourceTypesHandler interface {
	Handle() middleware.Responder
}

// NewGetResourceTypes creates a new http.Handler for the get resource types operation
func NewGetResourceTypes(ctx *middleware.Context, handler GetResourceTypesHandler) *GetResourceTypes {
	return &GetResourceTypes{Context: ctx, Handler: handler}
}

/*GetResourceTypes swagger:route GET /resource_types resource_types getResourceTypes

GetResourceTypes get resource types API

*/
type GetResourceTypes struct {
	Context *middleware.Context
	Handler GetResourceTypesHandler
}

func (o *GetResourceTypes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)

	if err := o.Context.BindValidRequest(r, route, nil); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle() // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
