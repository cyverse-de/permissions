package permission_lookup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-swagger/go-swagger/httpkit/middleware"
)

// BySubjectHandlerFunc turns a function with the right signature into a by subject handler
type BySubjectHandlerFunc func(BySubjectParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BySubjectHandlerFunc) Handle(params BySubjectParams) middleware.Responder {
	return fn(params)
}

// BySubjectHandler interface for that can handle valid by subject params
type BySubjectHandler interface {
	Handle(BySubjectParams) middleware.Responder
}

// NewBySubject creates a new http.Handler for the by subject operation
func NewBySubject(ctx *middleware.Context, handler BySubjectHandler) *BySubject {
	return &BySubject{Context: ctx, Handler: handler}
}

/*BySubject swagger:route GET /transitive_permissions/subjects/{subject_type}/{subject_id} permissionLookup bySubject

Look Up by Subject

*/
type BySubject struct {
	Context *middleware.Context
	Handler BySubjectHandler
}

func (o *BySubject) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewBySubjectParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
