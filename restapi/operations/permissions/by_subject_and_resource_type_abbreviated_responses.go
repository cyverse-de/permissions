// Code generated by go-swagger; DO NOT EDIT.

package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/cyverse-de/permissions/models"
)

// BySubjectAndResourceTypeAbbreviatedOKCode is the HTTP code returned for type BySubjectAndResourceTypeAbbreviatedOK
const BySubjectAndResourceTypeAbbreviatedOKCode int = 200

/*
BySubjectAndResourceTypeAbbreviatedOK OK

swagger:response bySubjectAndResourceTypeAbbreviatedOK
*/
type BySubjectAndResourceTypeAbbreviatedOK struct {

	/*
	  In: Body
	*/
	Payload *models.AbbreviatedPermissionList `json:"body,omitempty"`
}

// NewBySubjectAndResourceTypeAbbreviatedOK creates BySubjectAndResourceTypeAbbreviatedOK with default headers values
func NewBySubjectAndResourceTypeAbbreviatedOK() *BySubjectAndResourceTypeAbbreviatedOK {

	return &BySubjectAndResourceTypeAbbreviatedOK{}
}

// WithPayload adds the payload to the by subject and resource type abbreviated o k response
func (o *BySubjectAndResourceTypeAbbreviatedOK) WithPayload(payload *models.AbbreviatedPermissionList) *BySubjectAndResourceTypeAbbreviatedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the by subject and resource type abbreviated o k response
func (o *BySubjectAndResourceTypeAbbreviatedOK) SetPayload(payload *models.AbbreviatedPermissionList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BySubjectAndResourceTypeAbbreviatedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BySubjectAndResourceTypeAbbreviatedBadRequestCode is the HTTP code returned for type BySubjectAndResourceTypeAbbreviatedBadRequest
const BySubjectAndResourceTypeAbbreviatedBadRequestCode int = 400

/*
BySubjectAndResourceTypeAbbreviatedBadRequest Bad Request

swagger:response bySubjectAndResourceTypeAbbreviatedBadRequest
*/
type BySubjectAndResourceTypeAbbreviatedBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewBySubjectAndResourceTypeAbbreviatedBadRequest creates BySubjectAndResourceTypeAbbreviatedBadRequest with default headers values
func NewBySubjectAndResourceTypeAbbreviatedBadRequest() *BySubjectAndResourceTypeAbbreviatedBadRequest {

	return &BySubjectAndResourceTypeAbbreviatedBadRequest{}
}

// WithPayload adds the payload to the by subject and resource type abbreviated bad request response
func (o *BySubjectAndResourceTypeAbbreviatedBadRequest) WithPayload(payload *models.ErrorOut) *BySubjectAndResourceTypeAbbreviatedBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the by subject and resource type abbreviated bad request response
func (o *BySubjectAndResourceTypeAbbreviatedBadRequest) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BySubjectAndResourceTypeAbbreviatedBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BySubjectAndResourceTypeAbbreviatedInternalServerErrorCode is the HTTP code returned for type BySubjectAndResourceTypeAbbreviatedInternalServerError
const BySubjectAndResourceTypeAbbreviatedInternalServerErrorCode int = 500

/*
BySubjectAndResourceTypeAbbreviatedInternalServerError Internal Server Error

swagger:response bySubjectAndResourceTypeAbbreviatedInternalServerError
*/
type BySubjectAndResourceTypeAbbreviatedInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorOut `json:"body,omitempty"`
}

// NewBySubjectAndResourceTypeAbbreviatedInternalServerError creates BySubjectAndResourceTypeAbbreviatedInternalServerError with default headers values
func NewBySubjectAndResourceTypeAbbreviatedInternalServerError() *BySubjectAndResourceTypeAbbreviatedInternalServerError {

	return &BySubjectAndResourceTypeAbbreviatedInternalServerError{}
}

// WithPayload adds the payload to the by subject and resource type abbreviated internal server error response
func (o *BySubjectAndResourceTypeAbbreviatedInternalServerError) WithPayload(payload *models.ErrorOut) *BySubjectAndResourceTypeAbbreviatedInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the by subject and resource type abbreviated internal server error response
func (o *BySubjectAndResourceTypeAbbreviatedInternalServerError) SetPayload(payload *models.ErrorOut) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BySubjectAndResourceTypeAbbreviatedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
