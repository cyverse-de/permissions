// Code generated by go-swagger; DO NOT EDIT.

package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// BySubjectAndResourceTypeAbbreviatedHandlerFunc turns a function with the right signature into a by subject and resource type abbreviated handler
type BySubjectAndResourceTypeAbbreviatedHandlerFunc func(BySubjectAndResourceTypeAbbreviatedParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BySubjectAndResourceTypeAbbreviatedHandlerFunc) Handle(params BySubjectAndResourceTypeAbbreviatedParams) middleware.Responder {
	return fn(params)
}

// BySubjectAndResourceTypeAbbreviatedHandler interface for that can handle valid by subject and resource type abbreviated params
type BySubjectAndResourceTypeAbbreviatedHandler interface {
	Handle(BySubjectAndResourceTypeAbbreviatedParams) middleware.Responder
}

// NewBySubjectAndResourceTypeAbbreviated creates a new http.Handler for the by subject and resource type abbreviated operation
func NewBySubjectAndResourceTypeAbbreviated(ctx *middleware.Context, handler BySubjectAndResourceTypeAbbreviatedHandler) *BySubjectAndResourceTypeAbbreviated {
	return &BySubjectAndResourceTypeAbbreviated{Context: ctx, Handler: handler}
}

/* BySubjectAndResourceTypeAbbreviated swagger:route GET /permissions/abbreviated/subjects/{subject_type}/{subject_id}/{resource_type} permissions bySubjectAndResourceTypeAbbreviated

Look Up Abbreviated Permissions by Subject and Resource Type

Looks up all permissions granted to a subject for resources of the given type. If lookup mode is enabled and the subject is a user, the most lenient permissions granted to the subject or any groups the subject belongs to will be listed. If lookup mode is not enabled or the subject is a group then only permissions assigned directly to the subject will be listed. This endpoint will return an error status if the subject ID is in use and associated with a different subject type.

*/
type BySubjectAndResourceTypeAbbreviated struct {
	Context *middleware.Context
	Handler BySubjectAndResourceTypeAbbreviatedHandler
}

func (o *BySubjectAndResourceTypeAbbreviated) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewBySubjectAndResourceTypeAbbreviatedParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
