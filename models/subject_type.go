package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SubjectType The subject type.
// swagger:model subject_type
type SubjectType string

const (
	// SubjectTypeUser captures enum value "user"
	SubjectTypeUser SubjectType = "user"
	// SubjectTypeGroup captures enum value "group"
	SubjectTypeGroup SubjectType = "group"
)

// for schema
var subjectTypeEnum []interface{}

func init() {
	var res []SubjectType
	if err := json.Unmarshal([]byte(`["user","group"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subjectTypeEnum = append(subjectTypeEnum, v)
	}
}

func (m SubjectType) validateSubjectTypeEnum(path, location string, value SubjectType) error {
	if err := validate.Enum(path, location, value, subjectTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this subject type
func (m SubjectType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSubjectTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
